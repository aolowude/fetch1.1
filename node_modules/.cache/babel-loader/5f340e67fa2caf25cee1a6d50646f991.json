{"ast":null,"code":"import _objectSpread from \"/Users/aolowude/git/fetch1.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/aolowude/git/fetch1.1/src/Card/index.tsx\";\nimport * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nvar dismissDistance = 150;\nexport var Card = memo(function (_ref) {\n  var isSelected = _ref.isSelected,\n      id = _ref.id,\n      title = _ref.title,\n      category = _ref.category,\n      history = _ref.history,\n      pointOfInterest = _ref.pointOfInterest,\n      backgroundColor = _ref.backgroundColor;\n  var y = useMotionValue(0);\n  var zIndex = useMotionValue(isSelected ? 2 : 0); // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n\n  var inverted = useInvertedBorderRadius(20); // We'll use the opened card element to calculate the scroll constraints\n\n  var cardRef = useRef(null);\n  var constraints = useScrollConstraints(cardRef, isSelected);\n\n  function checkSwipeToDismiss() {\n    y.get() > dismissDistance && history.push(\"/\");\n  }\n\n  function checkZIndex(latest) {\n    if (isSelected) {\n      zIndex.set(2);\n    } else if (!isSelected && latest.scaleX < 1.01) {\n      zIndex.set(0);\n    }\n  } // When this card is selected, attach a wheel event listener\n\n\n  var containerRef = useRef(null);\n  useWheelScroll(containerRef, y, constraints, checkSwipeToDismiss, isSelected);\n  return React.createElement(\"li\", {\n    ref: containerRef,\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Overlay, {\n    isSelected: isSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-content-container \".concat(isSelected && \"open\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(motion.div, {\n    ref: cardRef,\n    className: \"card-content\",\n    style: _objectSpread({}, inverted, {\n      zIndex: zIndex,\n      y: y\n    }),\n    layoutTransition: isSelected ? openSpring : closeSpring,\n    drag: isSelected ? \"y\" : false,\n    dragConstraints: constraints,\n    onDrag: checkSwipeToDismiss,\n    onUpdate: checkZIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Image, {\n    id: id,\n    isSelected: isSelected,\n    pointOfInterest: pointOfInterest,\n    backgroundColor: backgroundColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Title, {\n    title: title,\n    category: category,\n    isSelected: isSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(ContentPlaceholder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), !isSelected && React.createElement(Link, {\n    to: id,\n    className: \"card-open-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n}, function (prev, next) {\n  return prev.isSelected === next.isSelected;\n});\n\nvar Overlay = function Overlay(_ref2) {\n  var isSelected = _ref2.isSelected;\n  return React.createElement(motion.div, {\n    initial: false,\n    animate: {\n      opacity: isSelected ? 1 : 0\n    },\n    transition: {\n      duration: 0.2\n    },\n    style: {\n      pointerEvents: isSelected ? \"auto\" : \"none\"\n    },\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/aolowude/git/fetch1.1/src/Card/index.tsx"],"names":["React","memo","useRef","motion","useMotionValue","Link","useInvertedBorderRadius","ContentPlaceholder","Title","Image","openSpring","closeSpring","useScrollConstraints","useWheelScroll","dismissDistance","Card","isSelected","id","title","category","history","pointOfInterest","backgroundColor","y","zIndex","inverted","cardRef","constraints","checkSwipeToDismiss","get","push","checkZIndex","latest","set","scaleX","containerRef","prev","next","Overlay","opacity","duration","pointerEvents"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { CardData } from \"../types\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n\ninterface Props extends CardData {\n  isSelected: boolean;\n  history: {\n    push: (route: string) => void;\n  };\n}\n\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nconst dismissDistance = 150;\n\nexport const Card = memo(\n  ({\n    isSelected,\n    id,\n    title,\n    category,\n    history,\n    pointOfInterest,\n    backgroundColor\n  }: Props) => {\n    const y = useMotionValue(0);\n    const zIndex = useMotionValue(isSelected ? 2 : 0);\n\n    // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n    const inverted = useInvertedBorderRadius(20);\n\n    // We'll use the opened card element to calculate the scroll constraints\n    const cardRef = useRef(null);\n    const constraints = useScrollConstraints(cardRef, isSelected);\n\n    function checkSwipeToDismiss() {\n      y.get() > dismissDistance && history.push(\"/\");\n    }\n\n    function checkZIndex(latest) {\n      if (isSelected) {\n        zIndex.set(2);\n      } else if (!isSelected && latest.scaleX < 1.01) {\n        zIndex.set(0);\n      }\n    }\n\n    // When this card is selected, attach a wheel event listener\n    const containerRef = useRef(null);\n    useWheelScroll(\n      containerRef,\n      y,\n      constraints,\n      checkSwipeToDismiss,\n      isSelected\n    );\n\n    return (\n      <li ref={containerRef} className={`card`}>\n        <Overlay isSelected={isSelected} />\n        <div className={`card-content-container ${isSelected && \"open\"}`}>\n          <motion.div\n            ref={cardRef}\n            className=\"card-content\"\n            style={{ ...inverted, zIndex, y }}\n            layoutTransition={isSelected ? openSpring : closeSpring}\n            drag={isSelected ? \"y\" : false}\n            dragConstraints={constraints}\n            onDrag={checkSwipeToDismiss}\n            onUpdate={checkZIndex}\n          >\n            <Image\n              id={id}\n              isSelected={isSelected}\n              pointOfInterest={pointOfInterest}\n              backgroundColor={backgroundColor}\n            />\n            <Title title={title} category={category} isSelected={isSelected} />\n            <ContentPlaceholder />\n          </motion.div>\n        </div>\n        {!isSelected && <Link to={id} className={`card-open-link`} />}\n      </li>\n    );\n  },\n  (prev, next) => prev.isSelected === next.isSelected\n);\n\nconst Overlay = ({ isSelected }) => (\n  <motion.div\n    initial={false}\n    animate={{ opacity: isSelected ? 1 : 0 }}\n    transition={{ duration: 0.2 }}\n    style={{ pointerEvents: isSelected ? \"auto\" : \"none\" }}\n    className=\"overlay\"\n  >\n    <Link to=\"/\" />\n  </motion.div>\n);\n"]},"metadata":{},"sourceType":"module"}